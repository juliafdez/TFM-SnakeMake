SAMPLES = ["A","B"]
#Workflow con ficheros fastqc ejemplo.
#Cambiar por los reales para las pruebas
rule all:
    input:
        "qc/fastqc/A.html",
        "qc/fastqc/multiqc_report.html",
        "logs/bismark/A.log",
        '/qualimap/A_qualimapReport.html'

rule fastqc:
    message: "Performing FastQC..."
    input:
        "data/samples/{sample}.fastq"
    output:
        html="qc/fastqc/{sample}.html",
        zip="qc/fastqc/{sample}_fastqc.zip"
    params: "--quiet"
    log:
        "logs/fastqc/{sample}_fastqc.log"
    threads: 1
    wrapper:
        "v0.80.1/bio/fastqc"

rule trim_galore_se:
    message: "Performing Trimming..."
    input:
        "data/samples/{sample}.fastq",
    output:
        "trimmed/{sample}.fq.gz",
        "trimmed/{sample}.1.fastq.gz_trimming_report.txt",
    params:
        extra="--illumina -q 20",
    log:
        "logs/trim_galore/{sample}.log",
    wrapper:
            "v0.80.1/bio/trim_galore/se"

rule run_multiqc:
    input:
        "trimmed/A.fq.gz",
        "data/samples/A.fastq"
        #"trimmed/B.fq.gz"
    output:
        "qc/fastqc/multiqc_report.html"
    shell:
        "multiqc qc/fastqc/"


rule bismark_align:
    message: "Performing alignment..."
    input:
        "data/samples/{sample}.fastq",
        "data/genome.fa"
    output:
        "bismark/{sample}_bismark_pe.bam",
        "bismark/{sample}_bismark_PE_report.txt",
        "bismark/{sample}_bismark_pe.nucleotide_stats.txt"
    log:
        "logs/bismark/{sample}.log",
    params:
        # optional params string
        extra=' --ambiguous --unmapped --nucleotide_coverage',
        basename='{sample}_'
    wrapper:
        "v0.80.1/bio/bismark/bismark"

#rule bwa_map:
#    input:
#        "data/genome.fa",
#        "data/samples/{sample}.fastq"
#    output:
#        "mapped_reads/{sample}.bam"
#    shell:
#        "bwa mem {input} | samtools view -Sb - > {output}"


rule qualimap:
    input:
        # BAM aligned, splicing-aware, to reference genome
        "bismark/{sample}_bismark_pe.bam",
        # GTF containing transcript, gene, and exon data
    output:
        '/qualimap/{sample}_qualimapReport.html'
    wrapper:
        "v0.80.1/bio/bismark/bismark"

#rule mark_duplicates:
#    input:
#        "mapped/{sample}.bam"
    # optional to specify a list of BAMs; this has the same effect
    # of marking duplicates on separate read groups for a sample
    # and then merging
#    output:
#        bam="dedup/{sample}.bam",
#        metrics="dedup/{sample}.metrics.txt"
#    log:
#        "logs/picard/dedup/{sample}.log"
#    params:
#        extra="REMOVE_DUPLICATES=true"
#    resources:
#        mem_mb=1024
#    wrapper:
#        "v0.80.1/bio/picard/markduplicates"
