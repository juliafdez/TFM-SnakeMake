SAMPLES = ["A","B"]
#Workflow con ficheros fastqc ejemplo.
#Cambiar por los reales para las pruebas
rule all:
    input:
        "qc/fastqc/A.html",
        "qc/fastqc/B.html",
        "bismark/A_bismark_pe.bam"

rule fastqc:
    input:
        "data/samples/{sample}.fastq"
    output:
        html="qc/fastqc/{sample}.html",
        zip="qc/fastqc/{sample}_fastqc.zip"
    params: "--quiet"
    log:
        "logs/fastqc/{sample}_fastqc.log"
    threads: 1
    wrapper:
        "v0.80.1/bio/fastqc"

#rule trim_galore_se:
#    input:
#        "data/samples/{sample}.fastq.gz",
#    output:
#        "trimmed/{sample}.fq.gz",
##        "trimmed/{sample}.1.fastq.gz_trimming_report.txt",
#    params:
#        extra="--illumina -q 20",
#    log:
#        "logs/trim_galore/{sample}.log",
#    wrapper:
#        "v0.80.1/bio/trim_galore/se"
#
#rule run_multiqc:
#    input:
#        "trimmed/A.fq.gz",
#        "trimmed/B.fq.gz"
#    output:
#        "qc/fastqc/multiqc_report.html"
#    shell:
#        "multiqc qc/fastqc/"
#

rule bismark_align:
    message: "Performing alignment..."
    input:
        "data/samples/{sample}.fastq.gz"
    output:
        "bismark/{sample}_bismark_pe.bam",
        "bismark/{sample}_bismark_PE_report.txt",
        "bismark/{sample}_bismark_pe.nucleotide_stats.txt"
    log:
        "logs/bismark/{sample}.log",
    params:
        # optional params string
        extra=' --ambiguous --unmapped --nucleotide_coverage',
        basename='{sample}_{genome}'
    wrapper:
        "v0.80.1/bio/bismark/bismark"


#rule qualimap:
#    input:
#        # BAM aligned, splicing-aware, to reference genome
#        bam="mapped/a.bam",
#        # GTF containing transcript, gene, and exon data
#        gtf="annotation.gtf"
#    output:
#        directory("qc/a")
#    log:
#        "logs/qualimap/rna-seq/a.log"
#    wrapper:
#        "v0.80.1/bio/qualimap/rnaseq"
#
#rule mark_duplicates:
#    input:
#        "mapped/{sample}.bam"
    # optional to specify a list of BAMs; this has the same effect
    # of marking duplicates on separate read groups for a sample
    # and then merging
#    output:
#        bam="dedup/{sample}.bam",
#        metrics="dedup/{sample}.metrics.txt"
#    log:
#        "logs/picard/dedup/{sample}.log"
#    params:
#        extra="REMOVE_DUPLICATES=true"
    # optional specification of memory usage of the JVM that snakemake will respect with global
    # resource restrictions (https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#resources)
    # and which can be used to request RAM during cluster job submission as `{resources.mem_mb}`:
    # https://snakemake.readthedocs.io/en/latest/executing/cluster.html#job-properties
#    resources:
#        mem_mb=1024
#    wrapper:
#        "v0.80.1/bio/picard/markduplicates"
